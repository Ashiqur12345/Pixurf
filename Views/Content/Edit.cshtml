@using Microsoft.AspNet.Identity
@using Pixurf.DataModels
@model Pixurf.ViewModels.ViewContentModel
    
@{
    ViewBag.Title = "Update Content Info";
} 


@using (Html.BeginForm("Edit", "Content", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        
        <div class="form-group" hidden>
            <input id="Content_ID" name="Content_ID" value="@Model.Content_ID" />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Access, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="Access" name="Access">
                    <option value="Public" @(Model.Access.Equals("Public") ? "Selected" : "")>Public</option>
                    <option value="Private" @(Model.Access.Equals("Private") ? "Selected" : "")>Private</option>
                    <option value="Follower" @(Model.Access.Equals("Follower") ? "Selected" : "")>Followers</option>
                </select>
                @Html.ValidationMessageFor(model => model.Access, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.AlbumName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AlbumName, new { htmlAttributes = new { @class = "form-control", list = "AlbumNameOptions" } })
                <datalist id="AlbumNameOptions">
                    @{
                        using (PixurfDBContext db = new PixurfDBContext())
                        {
                            string userId = User.Identity.GetUserId();

                            List<Album> albums = db.Albums.Where(a => a.User.User_ID.Equals(userId)).ToList();

                            foreach (Album album in albums)
                            { 
                                <option value="@album.Name"> @album.Name</option>
                            }
                        }
                    }

                </datalist>
                @Html.ValidationMessageFor(model => model.AlbumName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
